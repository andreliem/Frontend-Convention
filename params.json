{"tagline":"Documentation of the convention that I am following for frontend dev","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"## HTML\r\n\r\n### Zen Coding\r\nZen coding will increase your HTML writing speed using an abbreviation syntax similar to css selectors.\r\n```html\r\n<!-- div#container>ul>li*3 will output -->\r\n<div id=\"container\">\r\n    <ul>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n    </ul>\r\n</div>\r\n````\r\n\r\n### Layout Structures\r\nName your content by HTML structural elements. \r\n* Never name your content after the visual appearance but after its description. (e.g. prefer \"sidebar-container\" than \"left-container\")\r\n* Add suffix “-container” for clarity to the primary parent element.\r\n* ~~Add container name prefix on subcontent (e.g. header-container > header-title)~~ No need to add the container name as prefix because using less, yu can nest you class in the contaner class, which make more sense.\r\n\r\n```html\r\n<body>\r\n    <div id=\"container\">\r\n        <div id=\"header-container\">\r\n            <div class=\"logo\">...</div>\r\n            <div>...</div>\r\n        </div>\r\n        <div id=\"content-container\">...</div>\r\n        <div id=\"sidebar-container\">...</div>\r\n    </div>\r\n</body>\r\n```\r\n\r\n### HTML Attributes Naming\r\n* Name your id, class after the elements description and not about the visual elements, use `.external-link` instead of `.red-link` => what if you change the color of the link?\r\n* Use hyphen to name your attribute and class.\r\n\r\n```html\r\n<div>\r\n    <div id=\"header-container\">\r\n        <div id=\"header-title\" class=\"title\">...</div>\r\n    </div>\r\n</div>\r\n```\r\n\r\n\r\n\r\n## CSS\r\n\r\n### Convention\r\n* Never use #id in your css files. Only class selectors are authorized in a css file. \r\n* To keep your HTML/CSS clean, name your class as your id. `<div class=\"header-title\" id=\"header-title\"></div>`\r\n* Minimize the depth of your css selector `.article-list ul li h1.title` can be replaced by `.article-list .title`\r\n* CSS Lint your css before pushing live\r\n\r\n### Less\r\n* Use Less.css to write your css: http://lesscss.org/. This will improve and structure better your stylesheet files.\r\n* Use the lessprefixer file: http://lessprefixer.com/ It will add the vendor prefixer (webkit, firefox, etc...) to increase the compatibility cross-browser.\r\n\r\n### Resources\r\n* Read http://smacss.com/book/\r\n\r\n***\r\n\r\n## Javascript\r\n\r\n* Please use Douglas Crockford javascript convention: http://javascript.crockford.com/code.html\r\n* JSLint your javascript. This tool maintained by Douglas Crockford respects its code convention.\r\n* Always put semicolons\r\n* Use DocBlock comment above variable and function declarations, use inline comment inside function to describe algorithm.\r\n\r\n```javascript\r\n/**\r\n * This is the foo function\r\n */\r\nfoo = function() {\r\n    // this is an inline comment\r\n    var baz = 'bar';   \r\n    return baz;\r\n};\r\n```\r\n\r\n* If you need to create an alias of `this`: use `self`\r\n\r\n```javascript\r\nvar foo = {\r\n  baz: 'Hello World',\r\n  bar: function() {\r\n    var self = this;\r\n    var st = setTimeout(function(){\r\n      return self.baz;\r\n    }, 1000);\r\n  }  \r\n};\r\n```\r\n\r\n### Jquery\r\n* Please write jquery plugin following the structure shown at http://jqueryboilerplate.com/\r\n\r\n","name":"Frontend Conventions","google":""}